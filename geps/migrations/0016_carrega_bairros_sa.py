# Generated by Django 3.2.12 on 2023-05-19 13:51

from django.db import migrations

def load_initial_data(apps, schema_editor):
    # get our model
    # get_model(appname, modelname)
    cidade_model = apps.get_model('geps', 'Cidade')
    bairro_model = apps.get_model('geps', 'Bairro')

    # Modifique a lista abaixo como necessário para sua localidade
     
    bairros = ['Acampamento Anchieta', 'Araçaúva', 'Bangu', 'Campestre', 'Campo Grande', 'Casa Branca',
               'Cata Preta', 'Centreville', 'Centro', 'Cidade São Jorge', 'Condomínio Maracanã',
               'Estância Rio Grande', 'Jardim', 'Jardim Alvorada', 'Jardim Alzira Franco',
               'Jardim Ana Maria', 'Jardim Bela Vista', 'Jardim Bom Pastor', 'Jardim Cipreste',
               'Jardim Clube de Campo', 'Jardim Cristiane', 'Jardim das Maravilhas', 'Jardim do Estádio',
               'Jardim Guarará', 'Jardim Guaripocaba', 'Jardim Ipanema', 'Jardim Irene', 'Jardim Itapoan',
               'Jardim Jamaica', 'Jardim Joaquim Eugênio de Lima', 'Jardim Las Vegas', 'Jardim Marek',
               'Jardim Rina', 'Jardim Santa Cristina', 'Jardim Santo Alberto', 'Jardim Santo André',
               'Jardim Santo André CDHU', 'Jardim Stella', 'Jardim Telles de Menezes', 'Jardim Utinga',
               'Jardim Vila Rica', 'Miami Riviera', 'Novo Homero Thon', 'Paraíso', 'Paranapiacaba',
               'Parque América', 'Parque Capuava', 'Parque das Garças', 'Parque das Nações', 'Parque do Pedroso',
               'Parque Erasmo Assunção', 'Parque Gerassi', 'Parque Jaçatuba', 'Parque João Ramalho', 'Parque Marajoara',
               'Parque Novo Oratório', 'Parque Oratório', 'Parque Represa Billings II', 'Parque Represa Billings III',
               'Parque Rio Grande', 'Pinheirinho', 'Polo Petroquímico de Capuava', 'Recreio da Borda do Campo', 'Rio Bonito',
               'Rio Grande', 'Rio Mogi', 'Rio Pequeno', 'Santa Maria', 'Santa Terezinha', 'Silveira', 'Sítio dos Teco',
               'Sítio dos Vianas', 'Sítio Taquaral', 'Três Divisas', 'Várzea do Tamanduateí', 'Vila Alice',
               'Vila Alpina', 'Vila Alzira', 'Vila América', 'Vila Aquilino', 'Vila Assunção', 'Vila Bastos',
               'Vila Camilópolis', 'Vila Curuçá', 'Vila Floresta', 'Vila Francisco Matarazzo', 'Vila Gilda',
               'Vila Guaraciaba', 'Vila Guarani', 'Vila Guiomar', 'Vila Helena', 'Vila Homero Thon',
               'Vila Humaitá', 'Vila João Ramalho', 'Vila Junqueira', 'Vila Linda', 'Vila Lucinda',
               'Vila Lutécia', 'Vila Luzita', 'Vila Metalúrgica', 'Vila Palmares', 'Vila Pires',
               'Vila Príncipe de Gales', 'Vila Progresso', 'Vila Sacadura Cabral', 'Vila Scarpelli',
               'Vila Suíça', 'Vila Tibiriçá', 'Vila Valparaíso', 'Vila Vitória', 'Waisberg']

    cidade_id=cidade_model.objects.get(nome = "Santo André", estado__sigla='SP')
    
    # Inclua na lista todos os bairros necessários
    for i in bairros:    
        bairro_model.objects.get_or_create(nome = i, cidade_id = cidade_id.pk)

def clean_reverse_data(apps, schema_editor):
    cidade_model = apps.get_model('geps', 'Cidade')
    cidade_model.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('geps', '0015_alter_regiaometropolitana_regiaometropolitana_and_more'),
    ]

    operations = [
        migrations.RunPython(load_initial_data, clean_reverse_data),        
    ]
